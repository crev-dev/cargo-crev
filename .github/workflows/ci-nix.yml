name: "CI (nix)"

env:
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: "sparse"

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main", "master", "devel" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    name: "Build"
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v30
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v15
        with:
          name: cargo-crev
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

      - name: Build workspace
        run: nix build -L --extra-experimental-features nix-command --extra-experimental-features flakes .#workspaceBuild

      # - name: Clippy workspace
      #   run: nix build -L --extra-experimental-features nix-command --extra-experimental-features flakes .#workspaceClippy

      - name: Run cargo doc
        run: nix build -L --extra-experimental-features nix-command --extra-experimental-features flakes .#workspaceDoc

      - name: Test workspace
        run: nix build -L --extra-experimental-features nix-command --extra-experimental-features flakes .#workspaceTest

  containers:
    name: "Containers"
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v30
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v15
        with:
          name: cargo-crev
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

      - name: Build cargo-crev container
        run: |
          nix build -L --extra-experimental-features nix-command --extra-experimental-features flakes .#container.cargo-crev
          echo "cargo-crev_container_tag=$(docker load < result | awk '{ print $3 }')" >> $GITHUB_ENV
